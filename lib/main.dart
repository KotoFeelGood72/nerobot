import 'dart:io';

import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:get_it/get_it.dart';
import 'package:intl/date_symbol_data_local.dart';
import 'package:nerobot/constants/app_colors.dart';
import 'package:nerobot/firebase_options.dart';
import 'package:nerobot/router/app_router.dart';
import 'package:nerobot/themes/text_themes.dart';

final getIt = GetIt.instance;

/// 1. –§–æ–Ω–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä ‚Äî –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å top-level (–Ω–µ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞)
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  // –≠—Ç–æ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ, –∫–æ–≥–¥–∞ –ø—É—à –ø—Ä–∏–¥—ë—Ç –≤ —Ñ–æ–Ω–µ (app killed –∏–ª–∏ background).
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  debugPrint('üì• –ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.messageId}');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.
}

/// 2. –õ–æ–∫–∞–ª—å–Ω—ã–π notifications-–ø–ª–∞–≥–∏–Ω (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—É—à–µ–π –≤ foreground)
final FlutterLocalNotificationsPlugin _flutterLocalNotificationsPlugin =
    FlutterLocalNotificationsPlugin();

/// 3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Android Notification Channel
const AndroidNotificationChannel _highImportanceChannel =
    AndroidNotificationChannel(
      'high_importance_channel', // id
      'High Importance Notifications', // title
      description: '–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã—Å–æ–∫–æ–π –≤–∞–∂–Ω–æ—Å—Ç–∏.',
      importance: Importance.high,
    );

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  getIt.registerSingleton<AppRouter>(AppRouter());
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  await initializeDateFormatting('ru_RU', null);

  // 4. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

  // 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–ª–∞–≥–∏–Ω
  if (Platform.isAndroid) {
    // –î–ª—è Android: —Å–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞
    await _flutterLocalNotificationsPlugin
        .resolvePlatformSpecificImplementation<
          AndroidFlutterLocalNotificationsPlugin
        >()
        ?.createNotificationChannel(_highImportanceChannel);
  }

  // 6. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∫–æ–≥–¥–∞ –ø—Ä–∏–¥—ë—Ç –ø—É—à –≤ foreground)
  const androidSettings = AndroidInitializationSettings('@mipmap/ic_launcher');
  const iosSettings = DarwinInitializationSettings();
  final initSettings = InitializationSettings(
    android: androidSettings,
    iOS: iosSettings,
  );

  await _flutterLocalNotificationsPlugin.initialize(
    initSettings,
    onDidReceiveNotificationResponse: (NotificationResponse response) {
      // –≠—Ç–∞ –∫–æ–ª–ª–±—ç–∫ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–∞–ø–Ω–µ—Ç –Ω–∞ –ø—É—à (foreground)
      debugPrint('üñ± Notification tapped: ${response.payload}');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–≤–∏–≥–∏—Ä–æ–≤–∞—Ç—å –∫—É–¥–∞-—Ç–æ –∂–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    },
  );

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    final appRouter = getIt<AppRouter>();

    return MaterialApp.router(
      routerConfig: appRouter.config(),
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        appBarTheme: const AppBarTheme(
          backgroundColor: Colors.white,
          surfaceTintColor: Colors.white,
          shadowColor: Colors.transparent,
          elevation: 0,
          foregroundColor: Colors.white,
          iconTheme: IconThemeData(color: Colors.black),
          titleTextStyle: TextStyle(
            color: Colors.black,
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
        scaffoldBackgroundColor: Colors.white,
        colorScheme: ColorScheme.fromSwatch(
          primarySwatch: MaterialColor(AppColors.violet.value, {
            50: AppColors.violet.withOpacity(0.1),
            100: AppColors.violet.withOpacity(0.2),
            200: AppColors.violet.withOpacity(0.3),
            300: AppColors.violet.withOpacity(0.4),
            400: AppColors.violet.withOpacity(0.5),
            500: AppColors.violet,
            600: AppColors.violet.withOpacity(0.7),
            700: AppColors.violet.withOpacity(0.8),
            800: AppColors.violet.withOpacity(0.9),
            900: AppColors.violet,
          }),
        ),
        primarySwatch: Colors.blue,
        textTheme: buildTextTheme(),
      ),
    );
  }
}
