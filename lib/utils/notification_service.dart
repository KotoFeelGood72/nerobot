import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';

class NotificationService {
  final FirebaseMessaging _messaging = FirebaseMessaging.instance;
  final FlutterLocalNotificationsPlugin _localNotifications =
      FlutterLocalNotificationsPlugin();

  /// –í—ã–∑—ã–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ initState –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞)
  Future<void> initialize() async {
    // 1) –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (–æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è iOS)
    NotificationSettings settings = await _messaging.requestPermission(
      alert: true,
      badge: true,
      sound: true,
    );
    debugPrint('NotificationSettings: $settings');

    // 2) –ü–æ–ª—É—á–∞–µ–º FCM token (–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Firestore, –∫–∞–∫ –º—ã –¥–µ–ª–∞–ª–∏ —Ä–∞–Ω—å—à–µ)
    String? token = await _messaging.getToken();
    debugPrint('üì≤ FCM Token: $token');

    // 3) –°–ª—É—à–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ foreground
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      debugPrint('üì® onMessage: ${message.messageId}');
      _showForegroundNotification(message);
    });

    // 4) –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–∞–ø–Ω—É–ª –ø–æ –ø—É—à—É –∏ –∑–∞–ø—É—Å—Ç–∏–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ background
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      debugPrint('üñ± onMessageOpenedApp: ${message.data}');
      // –ù–∞–≤–∏–≥–∏—Ä—É–π—Ç–µ –≤ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∏—Å–ø–æ–ª—å–∑—É—è message.data
    });

    // 5) –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç–æ (killed) –∏ –ø—É—à –Ω–∞ –Ω–µ–≥–æ –∫–ª–∏–∫–Ω—É–ª–∏
    RemoteMessage? initialMessage = await _messaging.getInitialMessage();
    if (initialMessage != null) {
      debugPrint('üîÖ getInitialMessage: ${initialMessage.data}');
      // –ù–∞–≤–∏–≥–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –ø—É—à –ø—Ä–∏—à—ë–ª –≤ foreground
  Future<void> _showForegroundNotification(RemoteMessage message) async {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫/—Ç–µ–ª–æ
    final notification = message.notification;
    final android = message.notification?.android;
    if (notification == null || android == null) return;

    final androidDetails = AndroidNotificationDetails(
      'high_importance_channel', // ID —Ç–æ–≥–æ –∂–µ –∫–∞–Ω–∞–ª–∞, —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–ª–∏ –≤ main.dart
      'High Importance Notifications',
      channelDescription:
          '–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã—Å–æ–∫–æ–π –≤–∞–∂–Ω–æ—Å—Ç–∏.',
      importance: Importance.high,
      priority: Priority.high,
      icon: '@mipmap/ic_launcher',
    );

    final iosDetails = DarwinNotificationDetails();

    final platformDetails = NotificationDetails(
      android: androidDetails,
      iOS: iosDetails,
    );

    await _localNotifications.show(
      notification.hashCode,
      notification.title,
      notification.body,
      platformDetails,
      payload:
          message.data['payload'] ??
          '', // –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ key="payload", –¥–æ—Å—Ç–∞—ë–º –∏—Ö
    );
  }
}
